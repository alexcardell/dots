snippet "imp(o|or|ort)?" "import" br
import ${1:module} from '${2:`!p snip.rv = t[1].lower()`}';
endsnippet

snippet "req(u|ui|uir|uire)?" "require" br
const ${1:ModuleName} = require('${2:`!p snip.rv = t[0].lower()`}');
endsnippet

snippet class
class ${1} {
	${0:${VISUAL}}
}
endsnippet

# jest
snippet desc "describe() block" b
describe('${1}', () => {
	${2}
});
endsnippet

snippet aft "after()" b
afterEach(() => {
	${1}
});
endsnippet

snippet bef "beforeEach()" b
before${1:Each}(() => {
	${0}
});
endsnippet

snippet it "it() block" b
it('${1}', () => {
	${2}
});
endsnippet

snippet ex "expect() assertion" b
expect(actual).to${3:/*Match*/}(expected);
endsnippet

snippet exn "expect() assertion" b
expect(actual).not.to${3:/*Match*/}(expected);
endsnippet

snippet test "test() block" b
test('${1}', () => {
	${2}
});
endsnippet
