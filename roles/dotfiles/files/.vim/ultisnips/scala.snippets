snippet "if" "if" r
if (${1}) {
	${0:/* expression */}
}
endsnippet

snippet "ifel" "if else" r
if (${1}) {
	${2:/* expression */}
} else {
	${3:/* expression */}
}
endsnippet

snippet "for" "for comprehension" r
for {
	${2:_} <- ${1:/* something */}
} yield ${3:()}
endsnippet

snippet "def" "def" br
def ${1:fn}(${2}): ${3:T} = {
	${0:/* expression */}
}
endsnippet

snippet "arg" "argument" r
${1:/*arg*/}: ${2:T}${3:, arg}
endsnippet

snippet "match" "match" r
${1:/* exp */} match {
	case ${2:/* value */} => ${3:/* return */}
}
endsnippet
